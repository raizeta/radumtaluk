    	$entity = new Product();
        $form = $this->createForm(new ProductType(), $entity);
        $form->handleRequest($request);

        if ($form->isValid()) 
        {
            $data = $form->getData();
            $nama = $data->getNama();# mengambil data dari field nama yang ada di form

            $slug = $this->get('back.slugger')->slugify($nama);

            $entity->setSlug($slug);

            $entity->setCreateAt(new \Datetime('now'));
            $entity->setUpdateAt(new \Datetime('now'));
            $em = $this->getDoctrine()->getManager();
            #$em->persist($entity);
            #$em->flush();
            #$this->get('session')->getFlashBag()->add('notice','Product Baru Telah Berhasil di Simpan');
            #return $this->redirect($this->generateUrl('list_product'));
        }
##### Atau #######
        $entity = new Product();
        $form = $this->createForm(new ProductType(), $entity);
        $form->handleRequest($request);

        if ($form->isValid()) 
        {
            
            $nama = $form['nama']->getData();# mengambil data dari field nama yang ada di form

            $slug = $this->get('back.slugger')->slugify($nama);

            $entity->setSlug($slug);

            $entity->setCreateAt(new \Datetime('now'));
            $entity->setUpdateAt(new \Datetime('now'));
            $em = $this->getDoctrine()->getManager();
            #$em->persist($entity);
            #$em->flush();
            #$this->get('session')->getFlashBag()->add('notice','Product Baru Telah Berhasil di Simpan');
            #return $this->redirect($this->generateUrl('list_product'));
        }

############checkbox dengan array collection
->add('color','entity',array('class'=>'EntityBundle:Color','property'=>'color','multiple'=>true,'expanded' => true))